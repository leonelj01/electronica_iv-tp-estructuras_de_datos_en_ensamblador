; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
platform = ststm32
board = bluepill_f103c8
framework = cmsis
build_flags =
    -Wall
    -Wextra
    -Werror
lib_deps = serie

platform_packages = 
    platformio/tool-renode

[env:bluepill_f103c8]
build_flags =
    -D ESPERA_PRUEBAS=3000

; ; En caso de que CPUTAPID sea reportado de manera incorrecta (M* 8)
; upload_flags = -c set CPUTAPID 0x2ba01477
; debug_server = ${platformio.packages_dir}/tool-openocd/bin/openocd
;     -s ${platformio.packages_dir}/tool-openocd/scriptss
;     -f interface/stlink.cfg
;     -c "transport select hla_swd"
;     -c "set CPUTAPID 0x2ba01477"
;     -f target/stm32f1x.cfg
;     -c "reset_config none"
    
[env:emulador]

;debug_test = test_compara_memoria

build_type = debug
debug_tool = custom
debug_init_cmds = 
    define pio_reset_halt_target
        monitor machine Reset
        $LOAD_CMDS
        monitor start
    end
    define pio_reset_run_target
        pio_reset_halt_target
    end
    target extended-remote $DEBUG_PORT
    $LOAD_CMDS
    $INIT_BREAK
    monitor start
debug_port = localhost:3333
debug_server = ${platformio.packages_dir}/tool-renode/bin/renode
    --disable-xwt
    --hide-log
    -e using sysbus
    -e mach create
    -e machine LoadPlatformDescription @platforms/cpus/stm32f103.repl
    -e emulation CreateServerSocketTerminal 4321 "externalUSART" false
    -e connector Connect usart1 externalUSART
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e sysbus.cpu DisableInterruptsWhileStepping true
    -e cpu PerformanceInMips 8
    -e machine StartGdbServer 3333
debug_extra_cmds =
    monitor start
monitor_port = socket://localhost:4321
debug_server_ready_pattern = GDB server with all CPUs started on port

upload_protocol = custom
upload_command = echo 1 ; No hay que cargar nada...
test_testing_command = 
    ${platformio.packages_dir}/tool-renode/bin/renode
    --disable-xwt
    -e using sysbus
    -e mach create
    -e machine LoadPlatformDescription @platforms/cpus/stm32f103.repl
    -e showAnalyzer usart1
    -e cpu PerformanceInMips 8
    -e sysbus LoadELF @${platformio.build_dir}/${this.__env__}/firmware.elf
    -e start